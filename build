#!/bin/sh

# Run the build
function doBuild() {
    echo "Building..."
    mkdir -p ./bin/
    #pushd ./src/parser/ > /dev/null
    #java -cp ../../lib/javacc-6.0.jar javacc japi.jj
    #popd > /dev/null
    java -jar ./lib/jflex-1.6.0.jar -d ./src/parser/ $1 --nobak \
            ./src/parser/japi.flex
    java -cp ./lib/ -jar ./lib/java-cup-11b.jar -destdir ./src/parser/ \
            -parser Parser ./src/parser/japi.cup
    javac $2 -cp ./lib/java-cup-11b-runtime.jar -g -sourcepath ./src/ \
            -d ./bin/ ./src/main/*.java
    echo "Done."
}

# Clean the build
function doClean() {
    echo "Cleaning build..."
    rm ./src/parser/*.java
    rm -r ./bin/
    echo "Done."
}

exit_status=0

case $@ in

    # Do the build operation if no arguments are supplied
    "")         doBuild ;;

    # Do the build operation, but tell javac to be verbose, if the argument
    # "verbose" was supplied
    "verbose")  doBuild -v -Xlint ;;

    # Clean the build if the argument was "clean"
    "clean")    doClean ;;

    # If the arguments were anything else, print an error message and exit with
    # error code 1
    *)          echo "Invalid arguments"
                exit_status=1 ;;

esac

unset -f doBuild
unset -f doClean
exit $exit_status
